#!/bin/zsh -feu

source /usr/share/mmc-shell/mmc-functions.sh
colors

REMOTE=github
REMOTE_BRANCH=github/main

reprepro_managed_dirs=(pool dists)

# this is a sign of trouble!
if ! gh run list --workflow pages-build-deployment;
then
    echo "we must wait for Git propagation to http"
    exit 1
fi

reprepro checkupdate sid

# GIT ..... reprepro ....... GIT
#  v           v           changed?
#                          This can be just detected by push --`with-lease'
# ^-- loop <--------------------
#


# return true if pushed successfully
update_once()
{
    git fetch $REMOTE

    # this is just
    # git push --force-with-lease $REMOTE main || git fetch $REMOTE
    if [[ $(git rev-parse FETCH_HEAD) != $(git rev-parse HEAD) ]]
    then
        # if different than HEAD

        info "reprepro update"
        reprepro update sid # requires PGP

        info "commit to git"
        git add $reprepro_managed_dirs
        # if something to commit at all!
        if ! git diff --staged --exit-code HEAD;
        then
            git commit -m 'update'
        fi


        info "try to merge with remote -- ignoring dists/"
        # now merge, all but those $reprepro_managed_dirs
        git merge --no-commit $REMOTE_BRANCH

        # don't re-add files which WE added, but 'reprepro removed', but remote added?
        git status --short pool|sed -n -e 's/^A  //p'| xargs --no-run-if-empty rm -v

        # now new (but old) files might appear in pool!!!
        git add pool/
        # interesting: what files?
        git diff --staged --stat  -- pool/

        # dists ..conflicts
        # git reset   --hard  dists/

        # fixme: this must not change anything!
        if [[ -n $(git ls-files --unmerged  dists/ ) ]]
        then
            cecho red "conflicts detected in these files:"
            git ls-files --unmerged dists/
            echo "resetting them"

            git ls-files --unmerged dists/ | cut --fields 2 | sort --unique |\
                xargs --max-args 1 --no-run-if-empty git checkout HEAD
        fi

        # so
        # if ! git diff --staged --stat  HEAD;
        if ! git diff --name-only --cached --exit-code dists/
        then
            echo "Some dists changed: so have to re-sign:"; read ignored
            # but maybe some conflicted files were ignored !
            reprepro export
            # stage them!
            git add dists/
        else
            :
            # git merge --abort
        fi

        if ! git diff --staged --exit-code HEAD;
        then
            git commit -m 'merge'
        fi
    fi

    # don't add ?
    # not good:
    # git status -s   dists|sed -n -e 's/^M  //p'| xargs git rm --cached

    #git reset --mixed -- dists
    #git reset --mixed -- pool

    git push --force-with-lease $REMOTE main

    # remove empty directories, lagging files??
    git clean -f pool
}

while ! update_once; do :; done
